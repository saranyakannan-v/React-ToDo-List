{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","useState","inputText","setInputText","items","setItems","className","onChange","event","newValue","target","value","type","onClick","prevItems","map","todoItem","ReactDOM","render","document","getElementById"],"mappings":"0JAwCeA,MAtCf,WAAgB,IAAD,EAEmBC,mBAAS,IAF5B,mBAERC,EAFQ,KAEGC,EAFH,OAGWF,mBAAS,IAHpB,mBAGRG,EAHQ,KAGDC,EAHC,KAkBf,OACA,sBAAKC,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,sBAAKA,UAAU,OAAf,UACE,uBAAOC,SAnBX,SAAsBC,GACtB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BR,EAAaM,IAiBsBG,KAAK,OAAOD,MAAOT,IAClD,wBAAQW,QAfZ,WACER,GAAS,SAACS,GAER,MAAM,GAAN,mBAAWA,GAAX,CAAsBZ,OAExBC,EAAa,KAUX,SACE,4CAGJ,8BACE,6BACEC,EAAMW,KAAI,SAAAC,GAAQ,OAAI,6BAAKA,eC7BjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f28c1e1b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\nconst [inputText, setInputText] = useState(\"\");\r\nconst [items, setItems] = useState([]);\r\n\r\nfunction handleChange(event){\r\nconst newValue = event.target.value;\r\nsetInputText(newValue);\r\n}\r\n\r\nfunction addItem(){\r\n  setItems((prevItems) => {\r\n    //used spread operator ...\r\n    return [...prevItems, inputText];\r\n  });\r\n  setInputText(\"\");\r\n}\r\n\r\nreturn (\r\n<div className=\"container\">\r\n  <div className=\"heading\">\r\n    <h1>To-Do List</h1>\r\n  </div>\r\n  <div className=\"form\">\r\n    <input onChange={handleChange} type=\"text\" value={inputText} />\r\n    <button onClick={addItem}>\r\n      <span>Add</span>\r\n    </button>\r\n  </div>\r\n  <div>\r\n    <ul>\r\n     {items.map(todoItem => <li>{todoItem}</li>)}\r\n    </ul>\r\n  </div>\r\n</div>\r\n);\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n//CHALLENGE: Make this app work by applying what you've learnt.\r\n//1. When new text is written into the input, its state should be saved.\r\n//2. When the add button is pressed, the current data in the input should be\r\n//added to an array.\r\n//3. The <ul> should display all the array items as <li>s\r\n"],"sourceRoot":""}